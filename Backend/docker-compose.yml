
services:
  ##Api Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"   # puerto público → interno del contenedor
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - app-network

  ##Auth Service
  db_auth:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_AUTH}
    ports:
      - "5438:5432"
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - app-network

  auth-app:
    build: ./auth-service
    depends_on:
      - db_auth
    env_file:
      - .env
    ports:
      - "8081:8081"
    networks:
      - app-network

  ##EHR Service
  db_fhir:
    image: postgres:16
    environment:
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_HAPI}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - fhir_data:/var/lib/postgresql/data
    networks:
      - app-network

  ehr-server:
    build: ./EHR-service/ehr-server
    ports:
      - "8085:8080"
    depends_on:
      - db_fhir
    restart: unless-stopped
    environment:
      - JAVA_TOOL_OPTIONS=-Xms128m -Xmx512m
      - spring.datasource.hikari.maximum-pool-size=3
      - hapi.fhir.validation.enabled=false
      - hapi.fhir.indexing.enabled=false
    networks:
      - app-network

  ehr-app:
    build: ./EHR-service
    depends_on:
      - ehr-server
    ports:
      - "8082:8082"
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - app-network

  ##Doctor Service
  db_doctor:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_DOCTOR}
    ports:
      - "5436:5432"
    volumes:
      - doctor_data:/var/lib/postgresql/data
    networks:
      - app-network

  doctor-app:
    build: ./doctors
    depends_on:
      - db_doctor
    env_file:
      - .env
    ports:
      - "8083:8083"
    networks:
      - app-network

  ##Appointment service
  db_appointment:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_APPOINTMENT}
    ports:
      - "5437:5432"
    volumes:
      - appointment_data:/var/lib/postgresql/data
    networks:
      - app-network

  appointment-app:
    build: ./appointment-service
    depends_on:
      - db_appointment
    env_file:
      - .env
    ports:
      - "8084:8084"
    networks:
      - app-network

  ##Patient Service
  db_patient:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_PATIENT}
    ports:
      - "5439:5432"
    volumes:
      - patient_data:/var/lib/postgresql/data
    networks:
      - app-network

  patient-app:
    build: ./patient-service
    depends_on:
      - db_patient
    env_file:
      - .env
    ports:
      - "8086:8086"
    networks:
      - app-network

  ##Notification Service
  db_notificacion:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: ${SPRING_DATASOURCE_DB_NOTIFICATION}
    ports:
      - "5433:5432"
    volumes:
      - notification_data:/var/lib/postgresql/data
    networks:
      - app-network

  notification-app:
    build: ./notification-service
    depends_on:
      - db_notificacion
    env_file:
      - .env
    ports:
      - "8087:8087"
    networks:
      - app-network

  ##Zookeeper
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-network

  ##Kafka
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - app-network

networks:
  app-network:
    external: true

volumes:
  auth_data:
  fhir_data:
  doctor_data:
  appointment_data:
  patient_data:
  notification_data: